# Generated by Django 3.0.5 on 2020-04-16 10:35

from django.db import migrations, transaction


@transaction.atomic
def fill_status_changed_at(apps, *args, **kwargs):
    Account = apps.get_model('core', 'Account')
    AccountLog = apps.get_model('core', 'AccountLog')
    accounts = Account.objects.all()
    for account in accounts:
        account_log = AccountLog.objects.filter(log_type=0, status=account.status, account=account)
        if account_log.exists():
            if account.status in [50, 60]:   # Surfing, Warming
                account_log = account_log.earliest('start_at')
            else:
                account_log = account_log.latest('start_at')

            if account_log:
                account.status_changed_at = account_log.start_at
                account.save(update_fields=['status_changed_at'])


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0288_account_status_changed_at'),
    ]

    operations = [
        migrations.RunPython(fill_status_changed_at),
    ]
