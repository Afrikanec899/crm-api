# Generated by Django 3.1.6 on 2021-02-23 12:34

from django.db import migrations, transaction
from django.utils import timezone


def fill_manager(apps, *args, **kwargs):
    AdAccount = apps.get_model('core', 'AdAccount')
    AdAccountLog = apps.get_model('core', 'AdAccountLog')
    for adaccount in AdAccount.objects.all():
        with transaction.atomic():
            now = timezone.now()
            adacc = AdAccount.objects.select_for_update().get(pk=adaccount.id)
            adacc.manager = adacc.account.manager
            adacc.save()
            try:
                log = AdAccountLog.objects.select_for_update().get(adaccount=adacc, log_type=1, end_at__isnull=True)
                log.end_at = now
                update_fields = ['end_at']
                log.save(update_fields=update_fields)
            except AdAccountLog.DoesNotExist:
                pass

            log_data = {
                'adaccount': adaccount,
                'start_at': now,
                'log_type': 1,
            }
            for key, value in kwargs.items():
                log_data[key] = value
            AdAccountLog.objects.create(**log_data)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0455_auto_20210223_1234'),
    ]

    operations = [
        migrations.RunPython(fill_manager),
    ]
